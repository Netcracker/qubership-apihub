---
kind: Deployment
apiVersion: apps/v1
metadata:
    name: 'qubership-apihub-backend'
    labels:
        name: 'qubership-apihub-backend'
        app.kubernetes.io/name: 'qubership-apihub-backend'
        app.kubernetes.io/component: 'backend'
        app.kubernetes.io/part-of: qubership-apihub
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/technology: 'go'
        olric-cluster: apihub
spec:
    replicas: {{ .Values.qubershipApihubBackend.replicas }}
    strategy:
        type: RollingUpdate
        rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
    template:
        metadata:
            labels:
                name: 'qubership-apihub-backend'
                app.kubernetes.io/name: 'qubership-apihub-backend'
                app.kubernetes.io/component: 'backend'
                app.kubernetes.io/part-of: qubership-apihub
                app.kubernetes.io/managed-by: helm
                app.kubernetes.io/technology: 'go'
                olric-cluster: apihub
        spec:
            serviceAccountName: 'qubership-apihub-backend'
            hostPID: false
            hostIPC: false
            volumes:
            -   name: qubership-apihub-backend-config
                secret:
                    defaultMode: 420
                    secretName: qubership-apihub-backend-config-secret
            -   name: tmp-volume
                emptyDir: {}
            containers:
            -   name: 'qubership-apihub-backend'
                image: '{{ .Values.qubershipApihubBackend.image.repository }}:{{ .Values.qubershipApihubBackend.image.tag }}'
                volumeMounts:
                -   name: qubership-apihub-backend-config
                    mountPath: /app/qubership-apihub-service/etc/
                    readOnly: true
                -   name: tmp-volume
                    mountPath: /tmp
                ports:
                -   name: web
                    containerPort: 8080
                    protocol: TCP
                -   name: olric
                    containerPort: 3320
                    protocol: TCP
                -   name: memberlist
                    containerPort: 3322
                    protocol: TCP
                env:
                -   name: LOG_LEVEL
                    value: '{{ .Values.qubershipApihubBackend.env.logLevel }}'
                -   name: APIHUB_CONFIG_FOLDER
                    value: '/app/qubership-apihub-service/etc/'
                resources:
                    requests:
                        cpu: {{ .Values.qubershipApihubBackend.resource.cpu.request }}
                        memory: '{{ .Values.qubershipApihubBackend.resource.memory.limit }}'
                    limits:
                        cpu: {{ .Values.qubershipApihubBackend.resource.cpu.limit }}
                        memory: '{{ .Values.qubershipApihubBackend.resource.memory.limit }}'
                livenessProbe:
                    httpGet:
                        path: /live
                        port: web
                    initialDelaySeconds: 5
                    periodSeconds: 10
                    timeoutSeconds: 2
                    failureThreshold: 2
                readinessProbe:
                    httpGet:
                        path: /ready
                        port: web
                    initialDelaySeconds: 5
                    periodSeconds: 5
                    timeoutSeconds: 2
                securityContext:
                    runAsUser: 10001
                    runAsGroup: 10001
                    readOnlyRootFilesystem: true
                    runAsNonRoot: true
                    seccompProfile:
                        type: RuntimeDefault
                    allowPrivilegeEscalation: false
                    capabilities:
                        drop:
                          - ALL
    selector:
        matchLabels:
            name: 'qubership-apihub-backend'

