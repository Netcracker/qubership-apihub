qubershipApihub:
  version: dev
  serverHostname: 'qubership-apihub.localhost'
  # LOG_LEVEL # Optional #  Info, Warn, Error, etc
  logLevel: 'INFO' 
  # APIHUB_ACCESS_TOKEN # Mandatory # Default system access token (any string). The token will be provisioned automatically during bootstrap
  accessToken: ''
  delimiter: '-'

########################
qubershipApihubBackend:
  image:
    repository: 'ghcr.io/netcracker/qubership-apihub-backend'  #TO_BE_SET
    tag: 'dev'
  replicas: 1

  monitoring:
    # MONITORING_ENABLED # Optional # Set to true to enable Prometheus metrics endpoints
    enabled: '' 

  resource:
    cpu:
      request: "100m"
      limit: "1"
    memory:
     limit: "512Mi"
  env:  
    # PRODUCTION_MODE # Mandatory # Enables production mode - login under local apihub users is prohibited in this mode. In this mode only SAML auth is possible, so SAML integration related deploy parameters are mandatory in this case
    productionMode: 'FALSE' 
    deploymentResourceName: "qubership-apihub-backend"
    # DIFF_SERVICE_URL # Mandatory # qubership-build-task-consumer service URL. May vary depends on deploy schema
    diffServiceUrl: 'http://localhost:3000 ' 

#    # GITLAB_URL # Optional # Deprecated. Required for Editor feature
#    gitlabUrl: '' 

    # DB_TYPE # Optional #
    dbType: 'postgres' 
    # APIHUB_POSTGRESQL_HOST # Mandatory # PG host address
    dbHost: 'pg-common.postgres-db.svc.cluster.local' 
    # APIHUB_POSTGRESQL_PORT # Mandatory # PG port
    dbPort: '5432' 
#    dbAdminUsername: ''  
#    dbAdminPassword: ''  
    # Mandatory # Logical database in PG cluster for APIHUB. Manual pre-creation required
    dbName: 'apihub_backend' 
    # Mandatory # User for APIHUB_POSTGRESQL_DB_NAME database
    dbUsername: 'apihub_backend_user'  
    # Mandatory # Password for APIHUB_POSTGRESQL_USERNAME user.
    dbPassword: 'apihub_backend_password' 
    skipDbCreation: true
    # Optional # Default admin user login (example: x_apihub). If set - this admin user will be created automatically.
    adminEmail: '' 
    # Optional # Default admin user password (example: password)
    adminPassword: '' 

#    # ADFS_METADATA_URL # Optional # SAML metadata URL. If set - enables SAML integration
#    adfsMetadataUrl: '' 

#    # APIHUB_URL # Optional # Factual APIHUB server URL in your environment. Required only if SAML integration enabled
#    apihubUrl: '' 
#    # EXTERNAL_LINKS # Optional # Links to be shown under (i) button in UI
#    externalLinks: '' 
#    # DEFAULT_WORKSPACE_ID # Optional # Default workspace ID for Agent UI
#    defaultWorkspaceId: ''

    # RELEASE_VERSION_PATTERN # Optional # Regex pattern for releases names validation.
    releaseVersionPattern: '^[0-9]{4}[.]{1}[1-4]{1}$'
    # PUBLISH_ARCHIVE_SIZE_LIMIT_MB # Optional # Limit for uploaded package size in order to avoid OOM
    publishArchiveSizeLimitMb: '50' 
    # PUBLISH_FILE_SIZE_LIMIT_MB # Optional # Limit for uploaded file (inside package) size in order to avoid OOM
    publishFileSizeLimitMb: '15'

#    # ORIGIN_ALLOWED # Optional # TODO
#    originAllowed: ''
#    # SYSTEM_NOTIFICATION # Optional # If set - footer with this text is shown for alll APIHUB users in APIHUB UI. Designed for maintenance windows.
#    systemNotification: '' 

    # INSECURE_PROXY # Optional # Set to true to enable apihub playground work without authtorization.
    insecureProxy: 'FALSE' 

    ldap:
      enabled: 'true' 
      # LDAP_SERVER # Optional # LDAP server URL. Required for SAML integration for syncing user inf
      server: '' 
      # Optional # LDAP User used for connecting to LDAP server
      user: ''
      # Optional # Password for LDAP User
      password: ''
    # Optional # Deprecated. Required for Editor feature
    clientId: '' #TO_BE_SET
    # Optional # Deprecated. Required for Editor feature
    clientSecret: '' #TO_BE_SET

    #jwtPrivateKey - Self generated private PKCS#8 private key in base64 encode format.
    jwtPrivateKey: ''

    saml:
      enabled: false
#      crt: ''
#      key: ''
    storageServer:
      # MINIO_STORAGE_ACTIVE # Optional # Set to true to enable S3 integration. S3 is used for store debug data
      active: 'FALSE' 
#      username: ''
#      password: ''
       # Optional # SAML server certificate, base64 encoded. Required only if SAML integration enabled
#      crt: ''
       # Optional # SAML metadata URL. If set - enables SAML integration
#      url: ''
#      bucketTame: ''
#      # MINIO_STORE_ONLY_BUILD_RESULT # Optional # Set to true to store only build results (less data amout) in S3 storage
#      storeOnlyBuildResult: '' 

#####apihub-node-service
qubershipApihubBuildTaskConsumer:
  image:
    repository: 'ghcr.io/netcracker/qubership-apihub-build-task-consumer' #TO_BE_SET
    tag: 'dev'
  replicas: 1  
  resource:
    cpu:
      request: "100m"
      limit: "1.25"
    memory:
     limit: "4200Mi"
     request: "750Mi"
  env:
    # FOLDER_STORE # Mandatory # Folder to store file cache. Not required to be persistence volume
    folderStore: '/tmp' 
    operationsBuildBatch: "16"

#####apihub-ui 
qubershipApihubUi:
  image:
    repository: 'ghcr.io/netcracker/qubership-apihub-ui'  #TO_BE_SET
    tag: 'dev'
  # APIHUB_BACKEND_ADDRESS # Mandatory # apihub-backend address.
  apihubBackendAddress: 'qubership-apihub-backend:8080'
  # APIHUB_NC_SERVICE_ADDRESS # Mandatory # Custom add-on service address.
  apihubNcServiceAddress: 'qubership-apihub-backend:8080' #'apihub-nc-service:8080' 
  replicas: 1  
  resource:
    cpu:
      request: "30m"
      limit: "1"
    memory:
     limit: "64Mi"
     request: "64Mi"
  ingress:
    enabled: true
    host: 'qubership-apihub'
    url: 'localhost'    
    path: '/'
    pathType: Prefix
  dnsIngress:
    enabled: false
    dnsRoute: 'qubership-apihub'
    url: 'localhost'
    tlsSecret:
      certificate: ''
      certificateKey: ''
  service:
    type: ClusterIP  # NodePort
    http:
      port: 8080
      targetPort: 8080
      nodePort: 30080
    https:
      port: 8443
      targetPort: 8443
      nodePort: 30443
