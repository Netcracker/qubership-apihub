### General
APIHUB_POSTGRESQL_HOST=host.docker.internal
APIHUB_POSTGRESQL_PORT=5432
APIHUB_POSTGRESQL_DB_NAME=apihub_backend
APIHUB_POSTGRESQL_USERNAME=apihub_backend_user
APIHUB_POSTGRESQL_PASSWORD=apihub_backend_password

DIFF_SERVICE_URL=host.docker.internal:3000
APIHUB_URL=http://host.docker.internal:8081
ALLOWED_HOSTS=host.docker.internal,localhost

# required to enable local users and enable insecure cookies which required for SAML/OIDC work on local PC
PRODUCTION_MODE=false

# TODO: temporary, will be removed
LEGACY_SAML=false

### Internal identity provider
# <admin_login, example: apihub>
APIHUB_ADMIN_EMAIL=${APIHUB_ADMIN_EMAIL}
# <admin_password, example: password>
APIHUB_ADMIN_PASSWORD=${APIHUB_ADMIN_PASSWORD}
# <put_your_key_here - any random string. Example: xyz>. For "qubership-apihub-build-task-consumer"
APIHUB_ACCESS_TOKEN=${APIHUB_ACCESS_TOKEN}

### SAML (external identity provider)
EXTERNAL_SAML_IDP_DISPLAY_NAME=SAML
EXTERNAL_SAML_IDP_IMAGE_SVG=
# <Keycloak SAML metadata endpoint. Default value is fine as soon as Keycloak with 0-Day configuration is set up within current compose file>
ADFS_METADATA_URL=http://host.docker.internal:8082/realms/apihub-1/protocol/saml/descriptor
# <Keycloak SAML certificate. Must be manually generated. Or provided by startup script>
SAML_CRT=${SAML_CRT}
# <Keycloak SAML certificate private key. Must be manually generated. Or provided by startup script>
SAML_KEY=${SAML_KEY}

### OpenID Connect (external identity provider)
EXTERNAL_OIDC_IDP_DISPLAY_NAME=OpenID Connect
EXTERNAL_OIDC_IDP_IMAGE_SVG=
OIDC_PROVIDER_URL=http://host.docker.internal:8082/realms/apihub-2
OIDC_CLIENT_ID=apihub-oidc
OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET}

# Enables auto-login with the only EXTERNAL identity provider. If there are more than 2 provider OR the only provider is INERNAL, backend won't raise up
AUTO_LOGIN=false

### Configuration for own APIHUB JWT
# <put_your_key_here - ssh private key base64 encoded>
JWT_PRIVATE_KEY=${JWT_PRIVATE_KEY}
# APIHUB Tokens TTL (rule: Actual TTL = TTL - 60 due to backend specific)
JWT_ACCESS_TOKEN_DURATION_SEC=120 # Example: 120 - 60 = 60 secs
JWT_REFRESH_TOKEN_DURATION_SEC=180 # Example: 180 - 60 = 120 secs

### Gitlab
CLIENT_ID=
CLIENT_SECRET=
GITLAB_URL=

### Other
EDITOR_DISABLED=false
